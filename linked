class StackUsingLinkedList {

    // Node class representing each element in the stack
    private static class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    private Node top; // Top of the stack

    // Constructor
    public StackUsingLinkedList() {
        this.top = null;
    }

    // Push operation: Add an element to the top of the stack
    public void push(int data) {
        Node newNode = new Node(data);
        newNode.next = top;
        top = newNode;
        System.out.println(data + " pushed to stack.");
    }

    // Pop operation: Remove and return the top element of the stack
    public int pop() {
        if (isEmpty()) {
            System.out.println("Stack underflow! No elements to pop.");
            return -1; // Return -1 for empty stack
        }
        int poppedData = top.data;
        top = top.next; // Move top pointer to the next node
        System.out.println(poppedData + " popped from stack.");
        return poppedData;
    }

    // Peek operation: Return the top element without removing it
    public int peek() {
        if (isEmpty()) {
            System.out.println("Stack is empty! No top element.");
            return -1; // Return -1 for empty stack
        }
        return top.data;
    }

    // isEmpty operation: Check if the stack is empty
    public boolean isEmpty() {
        return top == null;
    }

    // Display stack elements
    public void display() {
        if (isEmpty()) {
            System.out.println("Stack is empty!");
            return;
        }
        Node temp = top;
        System.out.print("Stack elements: ");
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }

    // Main method to test the stack
    public static void main(String[] args) {
        StackUsingLinkedList stack = new StackUsingLinkedList();

        stack.push(10);
        stack.push(20);
        stack.push(30);

        stack.display();

        System.out.println("Top element is: " + stack.peek());

        stack.pop();
        stack.display();

        System.out.println("Stack is empty: " + stack.isEmpty());
    }
}
